P: [$]
L: [void, $, int]
D: [void, $, int]
Vd: [void, $, num, (, {, ;, id, while, if, int, return]
Fn: [void, $, int]
Ts: [main, id]
Ps: [)]
Cs: [void, $, num, (, while, int, else, {, ;, id, }, if, return]
Pl: [), ,]
Pa: [), ,]
Ld: [void, num, (, {, ;, id, while, if, return, int]
Sl: [num, (, {, ;, id, while, }, if, return]
S: [else, num, (, {, ;, id, while, }, if, return]
Es: [else, num, (, {, ;, id, while, }, if, return]
Ss: [else, num, (, {, ;, id, while, }, if, return]
Is: [else, num, (, {, ;, id, while, }, if, return]
Rs: [else, num, (, {, ;, id, while, }, if, return]
E: [), ;, ,, ]]
V: [==, <=, ), *, +, ,, -, /, ;, <, !=, =, ], >, >=]
Se: [), ;, ,, ]]
Ae: [==, <=, ), ;, +, <, !=, ,, ], -, >, >=]
R: [num, (, id]
A: [num, (, id]
T: [==, <=, ), *, +, ,, -, /, ;, <, !=, ], >, >=]
M: [num, (, id]
F: [==, <=, ), *, +, ,, -, /, ;, <, !=, ], >, >=]
C: [==, <=, ), *, +, ,, -, /, ;, <, !=, ], >, >=]
Ar: [)]
Al: [), ,]
